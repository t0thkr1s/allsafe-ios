//
//  LoggingVulnerabilityView.swift
//  Allsafe-iOS
//
//  Created by Kristóf on 2025. 08. 07..
//

import SwiftUI
import os.log

struct LoggingVulnerabilityView: View {
    @State private var buttonPressed = false
    
    var body: some View {
        VStack(spacing: 24) {
            ChallengeHeaderView(title: "[CHALLENGE]", subtitle: "INSECURE LOGGING VULNERABILITY")
            
            MissionBriefingView(description: "This application logs sensitive data using insecure methods when users interact with it. The logging implementation exposes confidential information to system logs and console output. Your mission is to trigger the logging and extract the flag from the logs.")
            
            VStack(spacing: 16) {
                Text("DATA PROCESSING SIMULATOR")
                    .font(.system(size: 14, weight: .bold, design: .monospaced))
                    .foregroundColor(.green)
                    .tracking(1)
                
                Button(action: {
                    logSensitiveData()
                }) {
                    Text("[PROCESS DATA]")
                        .font(.system(size: 14, weight: .medium, design: .monospaced))
                        .foregroundColor(.black)
                        .padding(.horizontal, 24)
                        .padding(.vertical, 12)
                        .background(Color.green)
                        .cornerRadius(0)
                }
                
                if buttonPressed {
                    Text("✓ Data processed - check system logs")
                        .font(.system(size: 11, weight: .medium, design: .monospaced))
                        .foregroundColor(.green)
                }

            }
            .padding(20)
            .background(
                RoundedRectangle(cornerRadius: 0)
                    .stroke(Color.gray, lineWidth: 1)
                    .background(Color.black.opacity(0.2))
            )
            
            Spacer()
        }
        .padding()
        .background(Color.black)
    }
    
    private func logSensitiveData() {
        buttonPressed = true
        
        // VULNERABLE: Multiple insecure logging methods
        let logger = Logger(subsystem: "com.allsafe.ios", category: "data")
        
        // VULNERABLE: Log flag to system logs
        logger.info("Processing sensitive data with flag: FLAG{insecure_logging_exposes_secrets_l0g5}")
        
        // VULNERABLE: Log flag to console
        print("DEBUG: Flag verification - FLAG{insecure_logging_exposes_secrets_l0g5}")
        
        // VULNERABLE: Log flag using NSLog
        NSLog("ALLSAFE: Data processing complete - FLAG{insecure_logging_exposes_secrets_l0g5}")
        
        // VULNERABLE: Log flag using os_log
        os_log("Sensitive operation completed: FLAG{insecure_logging_exposes_secrets_l0g5}", type: .info)
    }
}

#Preview {
    LoggingVulnerabilityView()
}
