//
//  PlistVulnerabilityView.swift
//  Allsafe-iOS
//
//  Created by Krist√≥f on 2025. 08. 05..
//

import SwiftUI

struct PlistVulnerabilityView: View {
    var body: some View {
        VStack(spacing: 24) {
            PlistChallengeHeaderView()
            PlistMissionBriefingView()
            
            Spacer()
        }
        .padding()
        .background(Color.black)
    }
}

struct PlistChallengeHeaderView: View {
    var body: some View {
        VStack(spacing: 12) {
            Text("[CHALLENGE]")
                .font(.system(size: 14, weight: .medium, design: .monospaced))
                .foregroundColor(.green)
                .tracking(2)
            
            Text("INSECURE PLIST FILE STORAGE")
                .font(.system(size: 18, weight: .bold, design: .monospaced))
                .foregroundColor(.white)
                .multilineTextAlignment(.center)
            
            Rectangle()
                .fill(Color.green)
                .frame(height: 1)
                .frame(maxWidth: 250)
        }
    }
}

struct PlistMissionBriefingView: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            Text("MISSION BRIEFING:")
                .font(.system(size: 12, weight: .bold, design: .monospaced))
                .foregroundColor(.green)
            
            Text("Sensitive information has been inappropriately stored in a Property List (.plist) file within this application. Your mission is to locate and extract a hidden flag from the plist file.")
                .font(.system(size: 13, design: .monospaced))
                .foregroundColor(.white)
                .lineSpacing(2)
            
            Text("\nTARGET: Retrieve the flag hidden in APIConfig.plist")
                .font(.system(size: 12, weight: .medium, design: .monospaced))
                .foregroundColor(.yellow)
        }
        .padding(16)
        .background(
            RoundedRectangle(cornerRadius: 0)
                .stroke(Color.green, lineWidth: 1)
                .background(Color.black.opacity(0.3))
        )
    }
}

#Preview {
    PlistVulnerabilityView()
}
