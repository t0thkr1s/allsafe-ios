//
//  VulnerabilityTypes.swift
//  Allsafe-iOS
//
//  Created by Krist√≥f on 2025. 08. 05..
//

import Foundation

enum VulnerabilityType: String, CaseIterable, Identifiable {
    case userDefaults = "userdefaults"
    case keychain = "keychain"
    case plist = "plist"
    case fileSystem = "filesystem"
    case sqliteDb = "sqlite"
    case licenseKey = "licensekey"
    case jailbreak = "jailbreak"
    case sslPinning = "sslpinning"
    case webviewXSS = "webviewxss"
    case logging = "logging"
    case pinbruteforce = "pinbruteforce"
    
    var id: String { rawValue }
    
    var title: String {
        switch self {
        case .userDefaults:
            return "NSUserDefaults Storage"
        case .keychain:
            return "Keychain Misuse"
        case .fileSystem:
            return "NSURLSession Cache"
        case .sqliteDb:
            return "SQLite Database"
        case .plist:
            return "Property List Files"
        case .licenseKey:
            return "License Key Validation"
        case .jailbreak:
            return "Jailbreak Detection"
        case .sslPinning:
            return "SSL Pinning Bypass"
        case .webviewXSS:
            return "WebView XSS Injection"
        case .logging:
            return "Insecure Logging"
        case .pinbruteforce:
            return "Vulnerable Vault"
        }
    }
    
    var description: String {
        switch self {
        case .userDefaults:
            return "Sensitive data stored in NSUserDefaults"
        case .keychain:
            return "Improper keychain implementation"
        case .fileSystem:
            return "Sensitive data cached in NSURLSession"
        case .sqliteDb:
            return "Unencrypted SQLite databases"
        case .plist:
            return "Secrets in property list files"
        case .licenseKey:
            return "Bypass license key validation using Frida"
        case .jailbreak:
            return "Perform a jailbreak detection on the device"
        case .sslPinning:
            return "Bypass SSL Pinning checks using Frida"
        case .webviewXSS:
            return "Exploit XSS vulnerabilities in WebView components"
        case .logging:
            return "Find the insecurely logged secret"
        case .pinbruteforce:
            return "Brute-force your way into the vault"
        }
    }
    
    var icon: String {
        switch self {
        case .userDefaults:
            return "gear"
        case .keychain:
            return "key"
        case .fileSystem:
            return "folder"
        case .sqliteDb:
            return "cylinder"
        case .plist:
            return "doc.text"
        case .licenseKey:
            return "checkmark.seal"
        case .jailbreak:
            return "lock.shield"
        case .sslPinning:
            return "shield"
        case .webviewXSS:
            return "globe"
        case .logging:
            return "terminal"
        case .pinbruteforce:
            return "lock.fill"
        }
    }
    
    var difficulty: String {
        switch self {
        case .userDefaults:
            return "Easy"
        case .keychain:
            return "Easy"
        case .fileSystem:
            return "Medium"
        case .plist:
            return "Easy"
        case .sqliteDb:
            return "Medium"
        case .licenseKey:
            return "Hard"
        case .jailbreak:
            return "Medium"
        case .sslPinning:
            return "Medium"
        case .webviewXSS:
            return "Easy"
        case .logging:
            return "Easy"
        case .pinbruteforce:
            return "Hard"
        }
    }
    
    var flag: String {
        switch self {
        case .userDefaults:
            return "FLAG{userdefaults_are_not_secure_m8934}"
        case .keychain:
            return "FLAG{keychain_accessibility_matters_k7821}"
        case .fileSystem:
            return "FLAG{nsurlsession_cache_exposes_secrets_c4ch3}"
        case .sqliteDb:
            return "FLAG{sqlite_without_encryption_s9876}"
        case .plist:
            return "FLAG{property_lists_expose_secrets_p4432}"
        case .licenseKey:
            return "FLAG{license_key_bypass_success_f1ag}"
        case .jailbreak:
            return "FLAG{jailbreak_detection_bypassed_j4il}"
        case .sslPinning:
            return "FLAG{ssl_pinning_bypass_success_h4ck}"
        case .webviewXSS:
            return "FLAG{webview_xss_injection_successful_w3b}"
        case .logging:
            return "FLAG{insecure_logging_exposes_secrets_l0g5}"
        case .pinbruteforce:
            return "FLAG{vulnerable_vault_exposed_l0g5}"
        }
    }
}
