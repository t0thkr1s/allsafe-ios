//
//  VulnerabilityDetailView.swift
//  Allsafe-iOS
//
//  Created by KristÃ³f on 2025. 08. 05..
//

import SwiftUI

struct VulnerabilityDetailView: View {
    let vulnerability: VulnerabilityType
    
    var body: some View {
        ScrollView {
            VStack(alignment: .leading, spacing: 20) {
                // headerView
                vulnerabilityContentView
            }
            .padding()
        }
        .background(Color.black)
        .navigationTitle("Allsafe")
        .navigationBarTitleDisplayMode(.inline)
    }
    
    private var headerView: some View {
        VStack(alignment: .leading, spacing: 12) {
            HStack {
                Image(systemName: vulnerability.icon)
                    .font(.largeTitle)
                    .foregroundColor(.green)
                
                VStack(alignment: .leading) {
                    Text(vulnerability.title)
                        .font(.system(size: 20, weight: .bold, design: .monospaced))
                        .foregroundColor(.white)
                    
                    HStack {
                        difficultyBadge
                        Spacer()
                    }
                }
                
                Spacer()
            }
            
            Text(vulnerability.description)
                .font(.system(size: 14, design: .monospaced))
                .foregroundColor(.gray)
        }
        .padding()
        .background(
            RoundedRectangle(cornerRadius: 0)
                .stroke(Color.green, lineWidth: 1)
                .background(Color.black.opacity(0.3))
        )
    }
    
    private var difficultyBadge: some View {
        Text("[\(vulnerability.difficulty.uppercased())]")
            .font(.system(size: 10, weight: .bold, design: .monospaced))
            .padding(.horizontal, 6)
            .padding(.vertical, 2)
            .background(
                RoundedRectangle(cornerRadius: 0)
                    .fill(difficultyColor(vulnerability.difficulty).opacity(0.2))
            )
            .foregroundColor(difficultyColor(vulnerability.difficulty))
            .overlay(
                RoundedRectangle(cornerRadius: 0)
                    .stroke(difficultyColor(vulnerability.difficulty), lineWidth: 1)
            )
    }
    
    private var vulnerabilityContentView: some View {
        VStack {
            switch vulnerability {
            case .userDefaults:
                UserDefaultsVulnerabilityView()
            case .keychain:
                KeychainVulnerabilityView()
            case .fileSystem:
                NSURLSessionCacheVulnerabilityView()
            case .sqliteDb:
                SQLiteVulnerabilityView()
            case .plist:
                PlistVulnerabilityView()
            case .licenseKey:
                LicenseKeyVulnerabilityView()
            case .jailbreak:
                JailbreakDetectionView()
            case .sslPinning:
                SSLPinningBypassView()
            case .webviewXSS:
                WebViewXSSView()
            case .logging:
                LoggingVulnerabilityView()
            case .pinbruteforce:
                PinBruteForceVulnerabilityView()
            case .hardcodedsecrets:
                HardcodedKeysVulnerabilityView()
            case .insecurefilesharing:
                InsecureFileSharingView()
            }
        }
    }
    
    private func difficultyColor(_ difficulty: String) -> Color {
        switch difficulty {
        case "Easy":
            return .green
        case "Medium":
            return .yellow
        case "Hard":
            return .red
        default:
            return .gray
        }
    }
}

struct PlaceholderVulnerabilityView: View {
    let type: VulnerabilityType
    
    var body: some View {
        VStack(spacing: 16) {
            Text("[COMING SOON]")
                .font(.system(size: 16, weight: .bold, design: .monospaced))
                .foregroundColor(.yellow)
            
            Text("This vulnerability module is under development.")
                .font(.system(size: 12, design: .monospaced))
                .foregroundColor(.gray)
                .multilineTextAlignment(.center)
        }
        .padding(20)
        .background(
            RoundedRectangle(cornerRadius: 0)
                .stroke(Color.yellow, lineWidth: 1)
                .background(Color.yellow.opacity(0.1))
        )
    }
}

#Preview {
    NavigationView {
        VulnerabilityDetailView(vulnerability: .userDefaults)
    }
}
