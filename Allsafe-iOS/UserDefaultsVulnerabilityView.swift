//
//  UserDefaultsVulnerabilityView.swift
//  Allsafe-iOS
//
//  Created by KristÃ³f on 2025. 08. 05..
//

import SwiftUI

struct UserDefaultsVulnerabilityView: View {
    @State private var username: String = ""
    @State private var password: String = ""
    @State private var isDataSaved: Bool = false
    
    var body: some View {
        VStack(spacing: 24) {
            UserDefaultsChallengeHeaderView()
            UserDefaultsMissionBriefingView()
            LoginFormView(username: $username, password: $password, saveAction: saveCredentials)
            
            if isDataSaved {
                StatusView()
            }
            
            Spacer()
        }
        .padding()
        .background(Color.black)
        .onAppear {
            setupVulnerabilityData()
        }
    }
    
    private func saveCredentials() {
        guard !username.isEmpty && !password.isEmpty else { return }
        
        // Insecurely storing credentials in UserDefaults
        UserDefaults.standard.set(username, forKey: "stored_username")
        UserDefaults.standard.set(password, forKey: "stored_password")
        UserDefaults.standard.set(Date().timeIntervalSince1970, forKey: "login_timestamp")
        
        withAnimation(.easeInOut(duration: 0.3)) {
            isDataSaved = true
        }
    }
    
    private func setupVulnerabilityData() {
        // Pre-populate with a flag for the CTF challenge
        UserDefaults.standard.set("FLAG{userdefaults_are_not_secure_m8934}", forKey: "hidden_flag")
        UserDefaults.standard.set("admin_backup_key_2024", forKey: "api_secret")
    }
}

// MARK: - Component Views

struct UserDefaultsChallengeHeaderView: View {
    var body: some View {
        VStack(spacing: 12) {
            Text("[CHALLENGE 01]")
                .font(.system(size: 14, weight: .medium, design: .monospaced))
                .foregroundColor(.green)
                .tracking(2)
            
            Text("USERDEFAULTS INSECURE STORAGE")
                .font(.system(size: 18, weight: .bold, design: .monospaced))
                .foregroundColor(.white)
                .multilineTextAlignment(.center)
            
            Rectangle()
                .fill(Color.green)
                .frame(height: 1)
                .frame(maxWidth: 250)
        }
    }
}

struct UserDefaultsMissionBriefingView: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            Text("MISSION BRIEFING:")
                .font(.system(size: 12, weight: .bold, design: .monospaced))
                .foregroundColor(.green)
            
            Text("This application stores sensitive user credentials using NSUserDefaults, a standard iOS preference storage mechanism. Your objective is to extract the stored data using mobile penetration testing techniques.")
                .font(.system(size: 13, design: .monospaced))
                .foregroundColor(.white)
                .lineSpacing(2)
            
            Text("\nTARGET: Retrieve the flag hidden in NSUserDefaults storage")
                .font(.system(size: 12, weight: .medium, design: .monospaced))
                .foregroundColor(.yellow)
        }
        .padding(16)
        .background(
            RoundedRectangle(cornerRadius: 0)
                .stroke(Color.green, lineWidth: 1)
                .background(Color.black.opacity(0.3))
        )
    }
}

struct LoginFormView: View {
    @Binding var username: String
    @Binding var password: String
    let saveAction: () -> Void
    
    var body: some View {
        VStack(spacing: 16) {
            Text("USER LOGIN PORTAL")
                .font(.system(size: 14, weight: .bold, design: .monospaced))
                .foregroundColor(.green)
                .tracking(1)
            
            VStack(spacing: 12) {
                TextField("Enter Username", text: $username)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .font(.system(size: 14, design: .monospaced))
                
                SecureField("Enter Password", text: $password)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .font(.system(size: 14, design: .monospaced))
                
                Button(action: saveAction) {
                    Text("[STORE CREDENTIALS]")
                        .font(.system(size: 14, weight: .medium, design: .monospaced))
                        .foregroundColor(.black)
                }
                .padding(.horizontal, 24)
                .padding(.vertical, 12)
                .background(Color.green)
                .cornerRadius(0)
            }
        }
        .padding(20)
        .background(
            RoundedRectangle(cornerRadius: 0)
                .stroke(Color.gray, lineWidth: 1)
                .background(Color.black.opacity(0.2))
        )
    }
}

struct StatusView: View {
    var body: some View {
        VStack(spacing: 8) {
            Text("[STATUS: CREDENTIALS STORED]")
                .font(.system(size: 12, weight: .bold, design: .monospaced))
                .foregroundColor(.green)
            
            Text("Data has been written to NSUserDefaults.\n")
                .font(.system(size: 11, design: .monospaced))
                .foregroundColor(.gray)
                .multilineTextAlignment(.center)
                .lineSpacing(2)
        }
        .padding(12)
        .background(
            RoundedRectangle(cornerRadius: 0)
                .stroke(Color.green, lineWidth: 1)
                .background(Color.green.opacity(0.1))
        )
    }
}

#Preview {
    UserDefaultsVulnerabilityView()
}
