//
//  KeychainVulnerabilityView.swift
//  Allsafe-iOS
//
//  Created by Krist√≥f on 2025. 08. 05..
//

import SwiftUI
import Security

struct KeychainVulnerabilityView: View {
    var body: some View {
        VStack(spacing: 24) {
            ChallengeHeaderView(title: "[CHALLENGE", subtitle: "KEYCHAIN INSECURE STORAGE")
            MissionBriefingView(description: "This application improperly stores sensitive data in the iOS Keychain. Your mission is to extract the stored flag." )
            
            Spacer()
        }
        .padding()
        .background(Color.black)
        .onAppear {
            saveFlagToKeychain()
        }
    }

    private func saveFlagToKeychain() {
        let flagData = "FLAG{keychain_accessibility_matters_k7821}".data(using: .utf8)!
        let query: [String: Any] = [
            kSecClass as String: kSecClassGenericPassword,
            kSecAttrAccount as String: "ctf_flag",
            kSecValueData as String: flagData,
            kSecAttrAccessible as String: kSecAttrAccessibleAfterFirstUnlock
        ]
        SecItemAdd(query as CFDictionary, nil)
    }
}

// Reusable components with configurable content

struct ChallengeHeaderView: View {
    var title: String
    var subtitle: String
    
    var body: some View {
        VStack(spacing: 12) {
            Text(title)
                .font(.system(size: 14, weight: .medium, design: .monospaced))
                .foregroundColor(.green)
                .tracking(2)
            
            Text(subtitle)
                .font(.system(size: 18, weight: .bold, design: .monospaced))
                .foregroundColor(.white)
                .multilineTextAlignment(.center)
            
            Rectangle()
                .fill(Color.green)
                .frame(height: 1)
                .frame(maxWidth: 250)
        }
    }
}

struct MissionBriefingView: View {
    var description: String
    
    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            Text("MISSION BRIEFING:")
                .font(.system(size: 12, weight: .bold, design: .monospaced))
                .foregroundColor(.green)
            
            Text(description)
                .font(.system(size: 13, design: .monospaced))
                .foregroundColor(.white)
                .lineSpacing(2)
        }
        .padding(16)
        .background(
            RoundedRectangle(cornerRadius: 0)
                .stroke(Color.green, lineWidth: 1)
                .background(Color.black.opacity(0.3))
        )
    }
}

#Preview {
    KeychainVulnerabilityView()
}
